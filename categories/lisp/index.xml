<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lisp on wshito&#39;s diary</title>
    <link>http://diary.wshito.com/categories/lisp/</link>
    <description>Recent content in Lisp on wshito&#39;s diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>All rights reserved 2016--</copyright>
    <lastBuildDate>Fri, 22 Sep 2017 18:05:22 +0900</lastBuildDate>
    
	<atom:link href="http://diary.wshito.com/categories/lisp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lispのダイナミック・スコープとスペシャル変数</title>
      <link>http://diary.wshito.com/comp/lisp/dynamic-scope/</link>
      <pubDate>Fri, 22 Sep 2017 18:05:22 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/dynamic-scope/</guid>
      <description>Common Lispのダイナミック・スコープについて勉強したのでまとめてみた．まず，要点は以下の通り． Lispのスコープは，レキシカル・スコープとダイ</description>
    </item>
    
    <item>
      <title>uvbook for Lisp -- Hello World</title>
      <link>http://diary.wshito.com/comp/lisp/uvbook/uvlisp-helloworld/</link>
      <pubDate>Sun, 01 Jan 2017 01:21:32 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/uvbook/uvlisp-helloworld/</guid>
      <description>&lt;p&gt;ここでは，&lt;a href=&#34;https://github.com/libuv/libuv&#34;&gt;libuv&lt;/a&gt;のチュートリアル本，&lt;a href=&#34;http://nikhilm.github.io/uvbook/basics.html#hello-world&#34;&gt;uvbookの第2.2節&lt;/a&gt;に載っている以下のHello WorldコードをLispで実装する手順を解説します．まず始めに&lt;a href=&#34;https://common-lisp.net/project/cffi/&#34;&gt;CFFI&lt;/a&gt;を使って直接libuvの関数を呼び出す方法を解説し，最後にlibuvラッパーの&lt;a href=&#34;https://github.com/orthecreedence/cl-libuv&#34;&gt;cl-libuv&lt;/a&gt;を使った実装方法を解説します．間違い，コメント等ありましたら，&lt;a href=&#34;https://twitter.com/waterloo_jp&#34;&gt;@waterloo_jp&lt;/a&gt;までお願いします．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lispのパッケージ管理入門．Quicklisp，ASDF，Roswellの違いなど</title>
      <link>http://diary.wshito.com/comp/lisp/lisp-pm/</link>
      <pubDate>Fri, 23 Dec 2016 15:25:34 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/lisp-pm/</guid>
      <description>Lispを始めたばかりで，まだ規模の大きいプログラムを書いていないため，パッケージ管理やらライブラリの依存関係解決などわからないことだらけで</description>
    </item>
    
    <item>
      <title>「対話によるCommon Lisp入門」第６話まとめノート</title>
      <link>http://diary.wshito.com/comp/lisp/cl-dialogue/6/</link>
      <pubDate>Sun, 20 Nov 2016 15:51:03 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/cl-dialogue/6/</guid>
      <description>本章ではリスト処理を行う関数を再帰を使って書く練習をしながら，関数の処理時間の見積もり方と最適なコードのへの書き換え方を学ぶ．本ページではま</description>
    </item>
    
    <item>
      <title>「対話によるCommon Lisp入門」第５話まとめノート</title>
      <link>http://diary.wshito.com/comp/lisp/cl-dialogue/5/</link>
      <pubDate>Thu, 17 Nov 2016 23:34:58 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/cl-dialogue/5/</guid>
      <description>この章では再帰の基本から，末尾再帰への書き換え方について解説している．またエディタにプログラムを書いてLispインタプリタに読み込む方法も説</description>
    </item>
    
    <item>
      <title>「対話によるCommon Lisp入門」第４話まとめノート</title>
      <link>http://diary.wshito.com/comp/lisp/cl-dialogue/4/</link>
      <pubDate>Tue, 15 Nov 2016 22:11:47 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/cl-dialogue/4/</guid>
      <description>この章ではリストから要素を取り出す方法と，要素からリストを構築する方法について書かれている．car，cdr，consの基本関数以外に，便利な</description>
    </item>
    
    <item>
      <title>「対話によるCommon Lisp入門」第3話まとめノート</title>
      <link>http://diary.wshito.com/comp/lisp/cl-dialogue/3/</link>
      <pubDate>Mon, 14 Nov 2016 21:49:25 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/cl-dialogue/3/</guid>
      <description>Lispのデータ型 リスト以外はアトム（1つだけ例外あり？p.24）． NULL型はリストでありシンボルである． NULL型のリストは空リスト()</description>
    </item>
    
    <item>
      <title>「対話によるCommon Lisp入門」第2話まとめノート</title>
      <link>http://diary.wshito.com/comp/lisp/cl-dialogue/2/</link>
      <pubDate>Mon, 14 Nov 2016 19:27:25 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/cl-dialogue/2/</guid>
      <description>関数と変数の作成 defun 関数定義 全ての引数は評価されない（マクロで通常の関数ではない）． setf 変数への代入 変数宣言なしで新たに変数が作れる．トップレベ</description>
    </item>
    
  </channel>
</rss>