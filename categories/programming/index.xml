<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on wshito&#39;s diary</title>
    <link>http://diary.wshito.com/categories/programming/</link>
    <description>Recent content in Programming on wshito&#39;s diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>All rights reserved 2016--</copyright>
    <lastBuildDate>Tue, 13 Nov 2018 22:37:03 +0900</lastBuildDate>
    
	<atom:link href="http://diary.wshito.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ファンタジー・ランドの保護地区をゆく Part 1</title>
      <link>http://diary.wshito.com/comp/js/fp/sanctuary1/</link>
      <pubDate>Tue, 13 Nov 2018 22:37:03 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/js/fp/sanctuary1/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;最近，JavaScript の関数型プログラミングにはまっているので，&lt;a href=&#34;https://github.com/fantasyland/fantasy-land&#34;&gt;Fantasy Land&lt;/a&gt; を実装した &lt;a href=&#34;https://sanctuary.js.org&#34;&gt;Sanctuary.js&lt;/a&gt; の使い方をサーベイして行きたいと思います．今回は基本中の基本，Functor から．間違いなどありましたらコメントお願いします．&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ltk と Tk との接続</title>
      <link>http://diary.wshito.com/comp/lisp/ltk/wish/</link>
      <pubDate>Wed, 15 Aug 2018 15:51:30 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/ltk/wish/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;管理者権限の無いマシンで Common Lisp の GUI 開発をする場合，GUI ツールキットをローカル・ディレクトリにインストールせざるを得ない．管理者権限の無いマシンで &lt;a href=&#34;https://github.com/herth/ltk&#34;&gt;ltk&lt;/a&gt; を使う必要に迫られたので，Lisp コードからどのように &lt;a href=&#34;https://tkdocs.com&#34;&gt;Tk&lt;/a&gt; を呼び出しているのか調べてみた．&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Lisp のストリームあれこれ</title>
      <link>http://diary.wshito.com/comp/lisp/peek-char/</link>
      <pubDate>Fri, 20 Apr 2018 10:10:40 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/peek-char/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_peek_char_の便利な機能&#34;&gt;&lt;code&gt;peek-char&lt;/code&gt; の便利な機能&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ストリームから文字を peek する際，&lt;code&gt;peek-char&lt;/code&gt; の第 1 引数に &lt;code&gt;t&lt;/code&gt; を指定すると空白文字をスキップしてくれる．次に &lt;code&gt;read-char&lt;/code&gt; を実行すると，スキップ後の 1 文字を返す．
&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Lisp の Sequence 型のまとめ</title>
      <link>http://diary.wshito.com/comp/lisp/sequence/</link>
      <pubDate>Sun, 11 Feb 2018 18:35:29 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/sequence/</guid>
      <description>Common Lisp のソート関数や探索関数は，引数にシーケンス（SEQUENCE）型のオブジェクトを取る．シーケンス型はベクトル（VECTOR）型とリスト（LIST）型の抽象型なので，ベクトルとリストのいずれもそれら関数に渡すことが出来る．では配列（ARRAY型）を引数に渡したい場合はどうか？ Common Lisp ではベクトルは 1 次元配列と同じなので，シーケンスを引数に取る関数に 1 次元配列を渡すのは問題ない． Common Lisp における配列とベク</description>
    </item>
    
    <item>
      <title>Roswell 環境下でのローカル・プロジェクト管理入門</title>
      <link>http://diary.wshito.com/comp/lisp/ros-local/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/lisp/ros-local/</guid>
      <description>この記事は Lisp Advent Calendar 2017 の4日目の記事として書かれました．コメント，質問等は @waterloo_jp まで． 「 Lisp のパッケージ管理入門．Quicklisp，ASDF，Roswell の違いなど 」では，Quicklisp，ASDF，Roswell の違いを説明し，Roswell の導入部分を解説しました．ここでは，もう少し踏み込んで，自分で開発するプロジェクト（ローカル・プロジェクト）を Roswell の環境下で管理する方法を説明します．本稿の最後で</description>
    </item>
    
    <item>
      <title>アセンブリを始めてみる</title>
      <link>http://diary.wshito.com/comp/as/step-by-step/begin-assembly/</link>
      <pubDate>Mon, 12 Jun 2017 21:15:11 +0900</pubDate>
      
      <guid>http://diary.wshito.com/comp/as/step-by-step/begin-assembly/</guid>
      <description>マイコンをもっと極めたい．その一心でひたすら低水準（マシン寄り）の勉強をしていると，結局アセンブリやリンカスクリプトの勉強に辿り着く． 坂井氏の「12ステップで作る組込みOS自作入門」をやってH8のアセンブリを勉強するか，それとも，もっと基礎から書かれたCASLの解説書の方が良いか．CASL IIの本ではKindleで読める「アセンブリ言語スタートブック」が良さそうだ．でもシュミレーターで動く言語じゃ</description>
    </item>
    
  </channel>
</rss>